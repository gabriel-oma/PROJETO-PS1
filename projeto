import time

usuarios = []
atividades = []

atividades_predefinidas = {
    "Reciclagem de materiais": 20,
    "Coleta seletiva": 20,
    "Reutilização de água da chuva": 30,
    "Consumo de alimentos orgânicos": 15,
    "Uso de bicicletas": 10,
    "Evitar o uso de plástico descartável": 25,
    "Reflorestamento e plantio de árvores": 40,
    "Descarte correto de pilhas": 50,
    "Uso de lâmpadas LED": 5,
    "Redução do desperdício de água e energia": 15,
    "Uso de transporte público": 15,
}

recompensas = [
    (100, "Desconto em lojas sustentáveis ou cashback de R$ 10,00"),
    (250, "Voucher de alimentação saudável ou R$ 30,00"),
    (350, "Garrafa térmica ecológica ou R$ 50,00"),
    (500, "Kit de reciclagem ou R$ 70,00"),
    (700, "Kit de produtos sustentáveis ou R$ 100,00"),
    (1000, "Gift Card de R$ 150,00 ou assinatura em serviços ecológicos"),
]

def cadastrar_usuario():
    username = input("Digite o username do usuário: ")
    email = input("Digite o email do usuário: ")
    for user in usuarios:
        if user['username'] == username or user['email'] == email:
            print("Usuário ou email já cadastrado!\n")
            return
    usuarios.append({"username": username, "email": email, "pontos": 0, "atividades_realizadas": 0})
    print(f"Usuário {username} cadastrado com sucesso!\n")
    time.sleep(1)

def excluir_usuario():
    username = input("Digite o username do usuário que deseja excluir: ")
    global usuarios
    usuarios = [u for u in usuarios if u['username'] != username]
    print(f"Usuário {username} excluído com sucesso!\n")
    time.sleep(1)

def registrar_atividade():
    username = input("Digite o username do usuário: ")
    usuario = next((u for u in usuarios if u['username'] == username), None)
    if not usuario:
        print("Usuário não encontrado!\n")
        return
    
    print("\nEscolha uma atividade sustentável realizada:")
    for i, (atividade, pontos) in enumerate(atividades_predefinidas.items(), 1):
        print(f"{i}. {atividade} ({pontos} pontos)")
    
    try:
        escolha = int(input("\nDigite o número da atividade escolhida ou 0 para outra: "))
        if escolha == 0:
            atividade = input("Digite o nome da atividade sustentável: ")
            pontos = 10
        else:
            atividade = list(atividades_predefinidas.keys())[escolha - 1]
            pontos = atividades_predefinidas[atividade]
    except (ValueError, IndexError):
        print("Opção inválida!\n")
        return
    
    try:
        quantidade = int(input("Quantas vezes essa atividade foi realizada? "))
    except ValueError:
        print("Número inválido!\n")
        return
    
    usuario["pontos"] += pontos * quantidade
    usuario["atividades_realizadas"] += quantidade
    atividades.append({"usuario": username, "atividade": atividade, "pontos": pontos, "quantidade": quantidade})
    print(f"Atividade '{atividade}' registrada para {username}!\n")
    time.sleep(1)

def excluir_atividade():
    username = input("Digite o username do usuário para excluir uma atividade: ")
    global atividades
    atividades = [a for a in atividades if a['usuario'] != username]
    print(f"Atividade de {username} excluída com sucesso!\n")
    time.sleep(1)

def listar_usuarios():
    if usuarios:
        print("\n////// Lista de Usuários //////")
        for usuario in usuarios:
            print(f"Username: {usuario['username']}, Email: {usuario['email']}, Pontos: {usuario['pontos']}, Atividades realizadas: {usuario['atividades_realizadas']}")
    else:
        print("Não há usuários cadastrados.\n")
    time.sleep(2)

def listar_atividades():
    if atividades:
        print("\n////// Lista de Atividades //////")
        for atividade in atividades:
            print(f"Usuário: {atividade['usuario']}, Atividade: {atividade['atividade']}, Pontos: {atividade['pontos']}, Quantidade: {atividade['quantidade']}")
    else:
        print("Não há atividades registradas.\n")
    time.sleep(2)

def ranking():
    print("\n////// Ranking de Usuários //////")
    ranking_usuarios = sorted(usuarios, key=lambda user: user['pontos'], reverse=True)
    for i, usuario in enumerate(ranking_usuarios, 1):
        print(f"{i}. {usuario['username']} - {usuario['pontos']} pontos")
    time.sleep(1)

def ajuda():
    print("\n////// Ajuda //////")
    print("1. Cadastre usuários para começar.")
    print("2. Registre atividades sustentáveis para acumular pontos.")
    print("3. Resgate recompensas com seus pontos.")
    print("4. Use o ranking para ver quem tem mais pontos.")
    print("5. Use o menu para navegar entre as opções.")
    time.sleep(2)

def resgatar_recompensa():
    username = input("Digite o username do usuário: ")
    usuario = next((u for u in usuarios if u['username'] == username), None)
    if not usuario:
        print("Usuário não encontrado!\n")
        return
    
    pontos_usuario = usuario['pontos']
    
    print("\n////// Recompensas Disponíveis //////")
    for pontos, recompensa in recompensas:
        if pontos_usuario >= pontos:
            print(f"{pontos} pontos: {recompensa}")
    
    if pontos_usuario < recompensas[0][0]:
        print("Você não tem pontos suficientes para resgatar nenhuma recompensa.\n")
        return
    
    try:
        pontos_escolhidos = int(input("\nDigite a quantidade de pontos que deseja resgatar: "))
    except ValueError:
        print("Número inválido!\n")
        return
    
    recompensa_encontrada = None
    for pontos, recompensa in recompensas:
        if pontos_escolhidos == pontos:
            recompensa_encontrada = recompensa
            break
    
    if recompensa_encontrada:
        if pontos_usuario >= pontos_escolhidos:
            usuario['pontos'] -= pontos_escolhidos
            print(f"Recompensa resgatada com sucesso: {recompensa_encontrada}")
            print(f"Pontos restantes: {usuario['pontos']}\n")
        else:
            print("Pontos insuficientes para resgatar essa recompensa.\n")
    else:
        print("Recompensa não encontrada para a quantidade de pontos digitada.\n")
    time.sleep(1)

def menu():
    while True:
        print("\n/////// GREEN MONEY ///////")
        print("1. Cadastrar novo usuário")
        print("2. Registrar atividades sustentáveis")
        print("3. Excluir usuário")
        print("4. Excluir atividade")
        print("5. Lista de usuários")
        print("6. Lista de atividades")
        print("7. Ranking de usuários")
        print("8. Ajuda")
        print("9. Resgatar recompensa")
        print("10. Sair")
        opcao = input("Escolha uma opção: ")
        if opcao == "10":
            print("Saindo do programa...")
            break
        
        opcoes = {
            "1": cadastrar_usuario,
            "2": registrar_atividade,
            "3": excluir_usuario,
            "4": excluir_atividade,
            "5": listar_usuarios,
            "6": listar_atividades,
            "7": ranking,
            "8": ajuda,
            "9": resgatar_recompensa,
        }
        if opcao in opcoes:
            opcoes[opcao]()
        else:
            print("Opção inválida!\n")

menu()
